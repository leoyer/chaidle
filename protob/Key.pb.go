// Code generated by protoc-gen-go. DO NOT EDIT.
// source: Key.proto

package protob

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type KeyRequest struct {
	StartKey         *string   `protobuf:"bytes,1,req,name=startKey" json:"startKey,omitempty"`
	EndKey           *string   `protobuf:"bytes,2,req,name=endKey" json:"endKey,omitempty"`
	Column           *string   `protobuf:"bytes,3,req,name=column" json:"column,omitempty"`
	Size             *int32    `protobuf:"varint,4,req,name=size" json:"size,omitempty"`
	Params           []*Params `protobuf:"bytes,5,rep,name=params" json:"params,omitempty"`
	Qualifiers       *string   `protobuf:"bytes,6,req,name=qualifiers" json:"qualifiers,omitempty"`
	Reversed         *bool     `protobuf:"varint,7,opt,name=reversed,def=0" json:"reversed,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *KeyRequest) Reset()                    { *m = KeyRequest{} }
func (m *KeyRequest) String() string            { return proto.CompactTextString(m) }
func (*KeyRequest) ProtoMessage()               {}
func (*KeyRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

const Default_KeyRequest_Reversed bool = false

func (m *KeyRequest) GetStartKey() string {
	if m != nil && m.StartKey != nil {
		return *m.StartKey
	}
	return ""
}

func (m *KeyRequest) GetEndKey() string {
	if m != nil && m.EndKey != nil {
		return *m.EndKey
	}
	return ""
}

func (m *KeyRequest) GetColumn() string {
	if m != nil && m.Column != nil {
		return *m.Column
	}
	return ""
}

func (m *KeyRequest) GetSize() int32 {
	if m != nil && m.Size != nil {
		return *m.Size
	}
	return 0
}

func (m *KeyRequest) GetParams() []*Params {
	if m != nil {
		return m.Params
	}
	return nil
}

func (m *KeyRequest) GetQualifiers() string {
	if m != nil && m.Qualifiers != nil {
		return *m.Qualifiers
	}
	return ""
}

func (m *KeyRequest) GetReversed() bool {
	if m != nil && m.Reversed != nil {
		return *m.Reversed
	}
	return Default_KeyRequest_Reversed
}

type KeyResponse struct {
	RespParams       []*RespParams `protobuf:"bytes,1,rep,name=respParams" json:"respParams,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *KeyResponse) Reset()                    { *m = KeyResponse{} }
func (m *KeyResponse) String() string            { return proto.CompactTextString(m) }
func (*KeyResponse) ProtoMessage()               {}
func (*KeyResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *KeyResponse) GetRespParams() []*RespParams {
	if m != nil {
		return m.RespParams
	}
	return nil
}

func init() {
	proto.RegisterType((*KeyRequest)(nil), "protob.KeyRequest")
	proto.RegisterType((*KeyResponse)(nil), "protob.KeyResponse")
}

func init() { proto.RegisterFile("Key.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 301 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x54, 0x90, 0x4f, 0x4e, 0xf3, 0x30,
	0x10, 0xc5, 0xe5, 0xfe, 0xc9, 0xd7, 0x4e, 0x3f, 0x55, 0xc8, 0x48, 0xc8, 0xca, 0x02, 0xa5, 0x5d,
	0xa0, 0xac, 0x2c, 0xd4, 0x1d, 0xec, 0x28, 0x0b, 0x90, 0xb2, 0x41, 0xbe, 0x41, 0x9a, 0x4c, 0xa5,
	0x88, 0x26, 0x76, 0x3d, 0x09, 0x28, 0x3d, 0x01, 0xc7, 0xe0, 0x56, 0x5c, 0x07, 0xd5, 0x6e, 0xd3,
	0xb0, 0xb2, 0xe7, 0xf7, 0x6c, 0xbf, 0xf7, 0x0c, 0xd3, 0x04, 0x5b, 0x69, 0xac, 0xae, 0x35, 0x0f,
	0xdc, 0xb2, 0x09, 0xff, 0x9b, 0xd4, 0xa6, 0x25, 0x79, 0x1a, 0x5e, 0x59, 0x24, 0xf3, 0xd6, 0x23,
	0xcb, 0x1f, 0x06, 0x90, 0x60, 0xab, 0x70, 0xdf, 0x20, 0xd5, 0x3c, 0x84, 0x09, 0xd5, 0xa9, 0xad,
	0x13, 0x6c, 0x05, 0x8b, 0x06, 0xf1, 0x54, 0x75, 0x33, 0xbf, 0x81, 0x00, 0xab, 0xfc, 0xa8, 0x0c,
	0x9c, 0x72, 0x9a, 0x8e, 0x3c, 0xd3, 0xbb, 0xa6, 0xac, 0xc4, 0xd0, 0x73, 0x3f, 0x71, 0x0e, 0x23,
	0x2a, 0x0e, 0x28, 0x46, 0xd1, 0x20, 0x1e, 0x2b, 0xb7, 0xe7, 0x77, 0x10, 0xf8, 0x40, 0x62, 0x1c,
	0x0d, 0xe3, 0xd9, 0x6a, 0xee, 0x63, 0x6c, 0xa4, 0x0f, 0xa5, 0x4e, 0x2a, 0xbf, 0x05, 0xd8, 0x37,
	0xe9, 0xae, 0xd8, 0x16, 0x68, 0x49, 0x04, 0xee, 0xdd, 0x1e, 0xe1, 0x0b, 0x98, 0x58, 0xfc, 0x40,
	0x4b, 0x98, 0x8b, 0x7f, 0x11, 0x8b, 0x27, 0x8f, 0xe3, 0x6d, 0xba, 0x23, 0x54, 0x1d, 0x5e, 0x3e,
	0xc1, 0xcc, 0x15, 0x23, 0xa3, 0x2b, 0x42, 0xbe, 0x02, 0xb8, 0x94, 0x17, 0xcc, 0xb9, 0xf3, 0xb3,
	0xbb, 0xea, 0x14, 0xd5, 0x3b, 0xb5, 0x7a, 0x86, 0xe0, 0x05, 0x5d, 0xf7, 0x07, 0x98, 0x93, 0xaf,
	0x7b, 0xfe, 0xa9, 0xee, 0xee, 0x85, 0x85, 0xd7, 0x7f, 0x98, 0x37, 0x5e, 0xdf, 0xc3, 0x22, 0xd3,
	0xa5, 0xdc, 0x7c, 0xe6, 0x07, 0x99, 0x69, 0x63, 0x75, 0x86, 0x44, 0xda, 0x4a, 0xac, 0x72, 0xa3,
	0x8b, 0xaa, 0x96, 0xef, 0xd8, 0xae, 0x87, 0x09, 0xb6, 0xaf, 0xec, 0x8b, 0xb1, 0x6f, 0xc6, 0x7e,
	0x03, 0x00, 0x00, 0xff, 0xff, 0x87, 0x63, 0x3a, 0xfe, 0xc7, 0x01, 0x00, 0x00,
}
